{"version":3,"sources":["constants.js","stories/Header/index.js","stories/constants/card.js","stories/Card/index.js","stories/Input/index.js","stories/Modal/index.js","stories/CardTypeRadio/index.js","stories/Button/index.js","utils.js","hooks/useCardNumbers.js","hooks/useExpirationDate.js","hooks/useSecureCode.js","hooks/useControlledInputValue.js","hooks/usePassword.js","components/CardAddition.js","components/CompleteCardAddition.js","components/Home.js","components/App.js","index.js"],"names":["PAGE","ID","HEADER_TEXT","FORMAT_CHAR","HIDDEN_NUMBER","CARD_NUMBERS_SEPARATOR","CARD_NUMBERS_SEPARATOR_REG","EXPIRATION_DATE_SEPARATOR","CARD_NUMBER","LENGTH","PARTIAL_LENGTH","FORMATTED_LENGTH","length","EXPIRATION_DATE","MONTH_LENGTH","YEAR_LENGTH","USERNAME","CARD_DESCRIPTION","Header","title","onPageBack","className","onClick","CARD","POCO","name","color","JUN","PARK","BRAN","LOYD","DOBI","COLIN","SUN","UNKNOWN","CARD_SIZE","Card","cardType","cardNumbers","username","expirationDate","size","firstNumber","secondNumber","thirdNumber","fourthNumber","cardName","Array","map","_","index","Input","type","placeHolder","isCenter","value","onChange","option","placeholder","Modal","children","CardTypeRadio","groupName","isChecked","JSON","stringify","checked","Button","innerText","isNumberValue","test","useCardNumbers","initialCardNumbers","useState","setCardNumbers","cardNumbersInputRef","useRef","event","target","selectionStart","joinedCardNumbers","join","diff","updatedCardNumbers","mod","remainder","fixedSelectionStart","every","current","setSelectionRange","slice","splitNumbers","Math","ceil","forEach","push","splitCardNumbers","replace","useExpirationDate","initialValue","setExpirationDate","unformattedValue","month","year","useSecureCode","secureCode","setSecureCode","useControlledInputValue","controlledInputValue","setControlledInputValue","usePassword","password","setPassword","dataset","prev","newPassword","passwordIndex","formatCardNumbers","numbers","firstValue","secondValue","hiddenNumbers","repeat","filter","undefined","formatExpirationDate","Object","values","CardAddition","props","isModalOpen","setIsModalOpen","setCardType","onCardNumbersChange","onExpirationDateChange","onUsernameChange","onSecureCodeChange","onPasswordChange","inputVerification","setInputVerification","useEffect","onRadioChange","parse","onSubmit","preventDefault","card","onCardInfoSubmit","alert","htmlFor","id","ref","maxLength","required","minLength","aria-label","min","max","data-password-index","isFulfilled","currentTarget","CompleteCardAddition","cardDescription","setCardDescription","onCardAdditionComplete","Home","routeTo","cardList","App","headerText","page","setPage","setCardList","processingCard","setProcessingCard","mainComponent","prevCardList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9ffe6d7.chunk.js","sourcesContent":["export const PAGE = {\r\n  HOME: {\r\n    ID: \"HOME\",\r\n    HEADER_TEXT: \"보유카드\",\r\n  },\r\n  CARD_ADDITION: {\r\n    ID: \"CARD_ADDITION\",\r\n    HEADER_TEXT: \"카드추가\",\r\n  },\r\n  COMPLETE_CARD_ADDITION: {\r\n    ID: \"COMPLETE_CARD_ADDITION\",\r\n    HEADER_TEXT: \"\",\r\n  },\r\n};\r\n\r\nexport const FORMAT_CHAR = {\r\n  HIDDEN_NUMBER: \"•\",\r\n  CARD_NUMBERS_SEPARATOR: \" - \",\r\n  CARD_NUMBERS_SEPARATOR_REG: /[\\s-]/g,\r\n  EXPIRATION_DATE_SEPARATOR: \"/\",\r\n};\r\n\r\nexport const CARD_NUMBER = (() => {\r\n  const LENGTH = 4;\r\n  const PARTIAL_LENGTH = 4;\r\n  const FORMATTED_LENGTH =\r\n    PARTIAL_LENGTH * LENGTH +\r\n    FORMAT_CHAR.CARD_NUMBERS_SEPARATOR.length * (LENGTH - 1);\r\n\r\n  return {\r\n    LENGTH,\r\n    PARTIAL_LENGTH,\r\n    FORMATTED_LENGTH,\r\n  };\r\n})();\r\n\r\nexport const EXPIRATION_DATE = (() => {\r\n  const MONTH_LENGTH = 2;\r\n  const YEAR_LENGTH = 2;\r\n  const LENGTH = MONTH_LENGTH + YEAR_LENGTH;\r\n  const FORMATTED_LENGTH =\r\n    LENGTH + FORMAT_CHAR.EXPIRATION_DATE_SEPARATOR.length;\r\n\r\n  return {\r\n    LENGTH,\r\n    FORMATTED_LENGTH,\r\n    MONTH_LENGTH,\r\n    YEAR_LENGTH,\r\n  };\r\n})();\r\n\r\nexport const USERNAME = {\r\n  MIN_LENGTH: 2,\r\n  MAX_LENGTH: 30,\r\n};\r\n\r\nexport const SECURE_CODE_LENGTH = 3;\r\n\r\nexport const CARD_DESCRIPTION = {\r\n  MIN_LENGTH: 1,\r\n  MAX_LENGTH: 30,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title = \"\", onPageBack }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      {onPageBack && <button onClick={onPageBack}></button>}\r\n      <h2>{title}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  onPageBack: PropTypes.func,\r\n};\r\n","export const CARD = {\r\n  POCO: {\r\n    name: \"포코 카드\",\r\n    color: \"red\",\r\n  },\r\n  JUN: {\r\n    name: \"준 카드\",\r\n    color: \"blue\",\r\n  },\r\n  PARK: {\r\n    name: \"공원 카드\",\r\n    color: \"green\",\r\n  },\r\n  BRAN: {\r\n    name: \"브랜 카드\",\r\n    color: \"pink\",\r\n  },\r\n  LOYD: {\r\n    name: \"로이드 카드\",\r\n    color: \"aqua\",\r\n  },\r\n  DOBI: {\r\n    name: \"도비 카드\",\r\n    color: \"light-pink\",\r\n  },\r\n  COLIN: {\r\n    name: \"콜린 카드\",\r\n    color: \"orange\",\r\n  },\r\n  SUN: {\r\n    name: \"썬 카드\",\r\n    color: \"yellow\",\r\n  },\r\n  UNKNOWN: {\r\n    name: \"\",\r\n    color: \"gray\",\r\n  },\r\n};\r\n\r\nexport const CARD_SIZE = {\r\n  SMALL: \"small\",\r\n  MEDIUM: \"medium\",\r\n  LARGE: \"large\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CARD_SIZE } from \"../constants/card\";\r\nimport \"./style.css\";\r\nimport \"../style/background.css\";\r\n\r\nconst Card = ({\r\n  cardType,\r\n  cardNumbers = [],\r\n  username = \"\",\r\n  expirationDate = \"\",\r\n  size,\r\n}) => {\r\n  const [firstNumber, secondNumber, thirdNumber, fourthNumber] = cardNumbers;\r\n  const { name: cardName, color } = cardType;\r\n\r\n  return (\r\n    <div className={`card card--${size} font-${size}`}>\r\n      <div className={`card__inner bg-${color}`}>\r\n        <div className=\"card__inner-card-name font-s\">{cardName}</div>\r\n        <div className=\"card__inner-chip\"></div>\r\n        {cardNumbers.length !== 0 && (\r\n          <ul className=\"font-l\">\r\n            <li>{firstNumber}</li>\r\n            <li>{secondNumber}</li>\r\n\r\n            <li>\r\n              {[...Array(thirdNumber?.length || 0)].map((_, index) => (\r\n                <span key={index} className=\"dot\"></span>\r\n              ))}\r\n            </li>\r\n            <li>\r\n              {[...Array(fourthNumber?.length || 0)].map((_, index) => (\r\n                <span key={index} className=\"dot\"></span>\r\n              ))}\r\n            </li>\r\n          </ul>\r\n        )}\r\n        <div className=\"card__inner-bottom font-m\">\r\n          <span className=\"card__inner-bottom-username\">\r\n            {username === \"\" ? \"NAME\" : username}\r\n          </span>\r\n          <span className=\"card__inner-bottom-expiration-date\">\r\n            {expirationDate === \"\" ? \"MM/YY\" : expirationDate}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\nCard.propTypes = {\r\n  cardType: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  cardNumbers: PropTypes.arrayOf(PropTypes.string),\r\n  username: PropTypes.string,\r\n  expirationDate: PropTypes.string,\r\n  size: PropTypes.oneOf(Object.values(CARD_SIZE)).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst Input = ({\r\n  type,\r\n  placeHolder,\r\n  isCenter = false,\r\n  value = \"\",\r\n  onChange = null,\r\n  ...option\r\n}) => {\r\n  return (\r\n    <input\r\n      className={`input ${isCenter ? \"text-center\" : \"\"}`}\r\n      type={type}\r\n      placeholder={placeHolder}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...option}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  placeHolder: PropTypes.string,\r\n  isCenter: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  option: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Modal = ({ children, onClick }) => {\r\n  return (\r\n    <div className=\"modal\" onClick={onClick}>\r\n      <div className=\"modal__inner\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\nimport \"../style/background.css\";\r\n\r\nconst CardTypeRadio = ({\r\n  cardType,\r\n  groupName,\r\n  isChecked = false,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <label className=\"card-type-radio\">\r\n      <input\r\n        type=\"radio\"\r\n        name={groupName}\r\n        value={JSON.stringify(cardType)}\r\n        checked={isChecked}\r\n        onChange={onChange}\r\n      />\r\n      <div className={`card-type-radio__logo bg-${cardType.color}`}></div>\r\n      <p>{cardType.name}</p>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CardTypeRadio;\r\n\r\nCardTypeRadio.propTypes = {\r\n  cardType: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  groupName: PropTypes.string.isRequired,\r\n  isChecked: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Button = ({ type = \"submit\", innerText, onClick }) => {\r\n  return (\r\n    <button type={type} className=\"button\" onClick={onClick}>\r\n      {innerText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  innerText: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","export const isNumberValue = (value) => {\r\n  return !/[^0-9]/g.test(value);\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { CARD_NUMBER, FORMAT_CHAR } from \"../constants\";\r\n\r\nimport { isNumberValue } from \"../utils\";\r\n\r\nconst unformatCardNumbers = (formattedValue) => {\r\n  return formattedValue.replace(FORMAT_CHAR.CARD_NUMBERS_SEPARATOR_REG, \"\");\r\n};\r\n\r\nconst splitCardNumbers = (value) => {\r\n  const splitNumbers = [];\r\n\r\n  [...Array(Math.ceil(value.length / CARD_NUMBER.PARTIAL_LENGTH))].forEach(\r\n    (_, index) => {\r\n      splitNumbers.push(\r\n        value.slice(\r\n          index * CARD_NUMBER.PARTIAL_LENGTH,\r\n          (index + 1) * CARD_NUMBER.PARTIAL_LENGTH\r\n        )\r\n      );\r\n    }\r\n  );\r\n\r\n  return splitNumbers;\r\n};\r\n\r\nconst useCardNumbers = (initialCardNumbers) => {\r\n  const [cardNumbers, setCardNumbers] = useState(initialCardNumbers);\r\n  const cardNumbersInputRef = useRef();\r\n\r\n  const onCardNumbersChange = (event) => {\r\n    const { value, selectionStart } = event.target;\r\n    const joinedCardNumbers = cardNumbers.join(\r\n      FORMAT_CHAR.CARD_NUMBERS_SEPARATOR\r\n    );\r\n    const diff = value.length - joinedCardNumbers.length;\r\n    let updatedCardNumbers = joinedCardNumbers;\r\n\r\n    const mod =\r\n      CARD_NUMBER.PARTIAL_LENGTH + FORMAT_CHAR.CARD_NUMBERS_SEPARATOR.length;\r\n    const remainder = selectionStart % mod;\r\n\r\n    const isSelectionValid = [\r\n      ...Array(FORMAT_CHAR.CARD_NUMBERS_SEPARATOR.length),\r\n    ].every((_, index) => remainder !== (mod - index) % mod);\r\n\r\n    const fixedSelectionStart = isSelectionValid\r\n      ? selectionStart\r\n      : selectionStart + ((mod + 1 - remainder) % mod);\r\n\r\n    cardNumbersInputRef?.current?.setSelectionRange(\r\n      fixedSelectionStart,\r\n      fixedSelectionStart\r\n    );\r\n\r\n    switch (true) {\r\n      case diff > 0:\r\n        if (!isNumberValue(value[selectionStart - 1])) {\r\n          return;\r\n        }\r\n\r\n        updatedCardNumbers =\r\n          joinedCardNumbers.slice(0, selectionStart - 1) +\r\n          value[selectionStart - 1] +\r\n          joinedCardNumbers.slice(selectionStart - 1);\r\n        break;\r\n      case diff === 0:\r\n        if (!isNumberValue(value[selectionStart - 1])) {\r\n          return;\r\n        }\r\n\r\n        updatedCardNumbers =\r\n          joinedCardNumbers.slice(0, selectionStart - 1) +\r\n          value[selectionStart - 1] +\r\n          joinedCardNumbers.slice(selectionStart);\r\n        break;\r\n      case diff < 0:\r\n        updatedCardNumbers =\r\n          joinedCardNumbers.slice(0, selectionStart) +\r\n          joinedCardNumbers.slice(selectionStart + 1);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    const unformattedValue = unformatCardNumbers(updatedCardNumbers);\r\n    const splitNumbers = splitCardNumbers(unformattedValue);\r\n\r\n    setCardNumbers(splitNumbers);\r\n  };\r\n\r\n  return [cardNumbers, cardNumbersInputRef, onCardNumbersChange];\r\n};\r\n\r\nexport default useCardNumbers;\r\n","import { useState } from \"react\";\r\nimport { EXPIRATION_DATE, FORMAT_CHAR } from \"../constants\";\r\nimport { isNumberValue } from \"../utils\";\r\n\r\nconst unformatExpirationDate = (formattedValue) => {\r\n  return formattedValue.replace(FORMAT_CHAR.EXPIRATION_DATE_SEPARATOR, \"\");\r\n};\r\n\r\nconst useExpirationDate = (initialValue) => {\r\n  const [expirationDate, setExpirationDate] = useState(initialValue);\r\n\r\n  const onExpirationDateChange = ({ target }) => {\r\n    const unformattedValue = unformatExpirationDate(target.value);\r\n\r\n    if (!isNumberValue(unformattedValue)) {\r\n      return;\r\n    }\r\n\r\n    const month = unformattedValue.slice(0, EXPIRATION_DATE.MONTH_LENGTH);\r\n    const year = unformattedValue.slice(EXPIRATION_DATE.MONTH_LENGTH);\r\n\r\n    setExpirationDate({\r\n      month,\r\n      year,\r\n    });\r\n  };\r\n\r\n  return [expirationDate, onExpirationDateChange];\r\n};\r\n\r\nexport default useExpirationDate;\r\n","import { useState } from \"react\";\r\nimport { isNumberValue } from \"../utils\";\r\n\r\nconst useSecureCode = (initialValue) => {\r\n  const [secureCode, setSecureCode] = useState(initialValue);\r\n\r\n  const onSecureCodeChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    if (!isNumberValue(value)) {\r\n      return;\r\n    }\r\n\r\n    setSecureCode(value);\r\n  };\r\n\r\n  return [secureCode, onSecureCodeChange];\r\n};\r\n\r\nexport default useSecureCode;\r\n","import { useState } from \"react\";\n\nconst useControlledInputValue = (initialValue) => {\n  const [controlledInputValue, setControlledInputValue] = useState(\n    initialValue\n  );\n  const onControlledInputValueChange = (event) => {\n    const { value } = event.target;\n\n    setControlledInputValue(value);\n  };\n\n  return [controlledInputValue, onControlledInputValueChange];\n};\n\nexport default useControlledInputValue;\n","import { useState } from \"react\";\nimport { isNumberValue } from \"../utils\";\n\nconst usePassword = (initialValue) => {\n  const [password, setPassword] = useState(initialValue);\n\n  const onPasswordChange = (event) => {\n    const { value, dataset } = event.target;\n\n    if (!isNumberValue(value)) {\n      return;\n    }\n\n    setPassword((prev) => {\n      const newPassword = [...prev];\n\n      newPassword[dataset.passwordIndex] = value;\n\n      return newPassword;\n    });\n  };\n\n  return [password, onPasswordChange];\n};\n\nexport default usePassword;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../stories/Card\";\r\nimport { CARD, CARD_SIZE } from \"../stories/constants/card\";\r\nimport Input from \"../stories/Input\";\r\nimport Modal from \"../stories/Modal\";\r\nimport CardTypeRadio from \"../stories/CardTypeRadio\";\r\nimport Button from \"../stories/Button\";\r\nimport useCardNumbers from \"../hooks/useCardNumbers\";\r\nimport useExpirationDate from \"../hooks/useExpirationDate\";\r\nimport useSecureCode from \"../hooks/useSecureCode\";\r\nimport useControlledInputValue from \"../hooks/useControlledInputValue\";\r\nimport usePassword from \"../hooks/usePassword\";\r\nimport {\r\n  CARD_NUMBER,\r\n  EXPIRATION_DATE,\r\n  FORMAT_CHAR,\r\n  SECURE_CODE_LENGTH,\r\n  USERNAME,\r\n} from \"../constants\";\r\n\r\nconst formatCardNumbers = (numbers) => {\r\n  const [firstValue, secondValue, ...restValues] = numbers;\r\n  const hiddenNumbers = restValues.map((value) =>\r\n    FORMAT_CHAR.HIDDEN_NUMBER.repeat(value.length)\r\n  );\r\n\r\n  return [firstValue, secondValue, ...hiddenNumbers]\r\n    .filter((value) => value !== undefined)\r\n    .join(FORMAT_CHAR.CARD_NUMBERS_SEPARATOR);\r\n};\r\n\r\nconst formatExpirationDate = (expirationDate) => {\r\n  return Object.values(expirationDate)\r\n    .filter((value) => value !== \"\")\r\n    .join(FORMAT_CHAR.EXPIRATION_DATE_SEPARATOR);\r\n};\r\n\r\nconst CardAddition = (props) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cardType, setCardType] = useState(CARD.UNKNOWN);\r\n  const [\r\n    cardNumbers,\r\n    cardNumbersInputRef,\r\n    onCardNumbersChange,\r\n  ] = useCardNumbers([]);\r\n  const [expirationDate, onExpirationDateChange] = useExpirationDate({\r\n    month: \"\",\r\n    year: \"\",\r\n  });\r\n  const [username, onUsernameChange] = useControlledInputValue(\"\");\r\n  const [secureCode, onSecureCodeChange] = useSecureCode(\"\");\r\n  const [password, onPasswordChange] = usePassword([\"\", \"\"]);\r\n  const [inputVerification, setInputVerification] = useState({\r\n    cardNumbers: false,\r\n    expirationDate: false,\r\n    username: false,\r\n    secureCode: false,\r\n    password: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsModalOpen(\r\n      cardNumbers[CARD_NUMBER.LENGTH - 1]?.length === CARD_NUMBER.PARTIAL_LENGTH\r\n    );\r\n  }, [cardNumbers]);\r\n\r\n  useEffect(() => {\r\n    setInputVerification({\r\n      cardNumbers:\r\n        cardNumbers[CARD_NUMBER.LENGTH - 1]?.length ===\r\n        CARD_NUMBER.PARTIAL_LENGTH,\r\n      expirationDate:\r\n        (expirationDate.month + expirationDate.year).length ===\r\n        EXPIRATION_DATE.LENGTH,\r\n      username: username.length >= USERNAME.MIN_LENGTH,\r\n      secureCode: secureCode.length === SECURE_CODE_LENGTH,\r\n      password: password.every((value) => value !== \"\"),\r\n    });\r\n  }, [cardNumbers, expirationDate, username, secureCode, password]);\r\n\r\n  const onCardInfoSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (cardType.name === CARD.UNKNOWN.name) {\r\n      alert(\"카드 회사를 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const card = {\r\n      cardType,\r\n      cardNumbers,\r\n      expirationDate,\r\n      username,\r\n      secureCode,\r\n      password,\r\n    };\r\n\r\n    props.onCardInfoSubmit(card);\r\n  };\r\n\r\n  const onModalClick = ({ target, currentTarget }) => {\r\n    if (target === currentTarget) {\r\n      setIsModalOpen(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onRadioChange = ({ target }) => {\r\n    setCardType(JSON.parse(target.value));\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-addition\">\r\n        <Card\r\n          cardType={cardType}\r\n          size={CARD_SIZE.MEDIUM}\r\n          expirationDate={formatExpirationDate(expirationDate)}\r\n          username={username}\r\n          cardNumbers={cardNumbers}\r\n        />\r\n        <form onSubmit={onCardInfoSubmit} className=\"card-addition__form\">\r\n          <div className=\"card-addition__number-input mt-standard\">\r\n            <label htmlFor=\"card-number\">카드 번호</label>\r\n            <Input\r\n              id=\"card-number\"\r\n              type=\"text\"\r\n              isCenter={true}\r\n              value={formatCardNumbers(cardNumbers)}\r\n              onChange={onCardNumbersChange}\r\n              ref={cardNumbersInputRef}\r\n              maxLength={CARD_NUMBER.FORMATTED_LENGTH}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"card-addition__expiration-input mt-standard\">\r\n            <label htmlFor=\"expiration-date\">만료일</label>\r\n            <Input\r\n              id=\"expiration-date\"\r\n              type=\"text\"\r\n              isCenter={true}\r\n              placeHolder=\"MM / YY\"\r\n              value={formatExpirationDate(expirationDate)}\r\n              onChange={onExpirationDateChange}\r\n              maxLength={EXPIRATION_DATE.FORMATTED_LENGTH}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"card-addition__username-input mt-standard\">\r\n            <label htmlFor=\"username\">카드 소유자 이름(선택)</label>\r\n            <span className=\"card-addition__username-indicator\">\r\n              {username.length}/30\r\n            </span>\r\n            <Input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              placeHolder=\"카드에 표시된 이름과 동일하게 입력하세요\"\r\n              value={username}\r\n              onChange={onUsernameChange}\r\n              maxLength={USERNAME.MAX_LENGTH}\r\n              minLength={USERNAME.MIN_LENGTH}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"card-addition__secure-code mt-standard\">\r\n            <label htmlFor=\"secure-code\">보안 코드(CVC/CVV)</label>\r\n            <div className=\"card-addition__secure-code-inner\">\r\n              <Input\r\n                id=\"secure-code\"\r\n                type=\"password\"\r\n                isCenter={true}\r\n                value={secureCode}\r\n                onChange={onSecureCodeChange}\r\n                maxLength={SECURE_CODE_LENGTH}\r\n                required\r\n              />\r\n              <div className=\"card-addition__tool-tip-button\">\r\n                <span>?</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-addition__password mt-standard\">\r\n            <label>카드비밀번호</label>\r\n            <div className=\"card-addition__password-inner\">\r\n              <Input\r\n                type=\"password\"\r\n                isCenter={true}\r\n                aria-label=\"첫번째 비밀번호\"\r\n                min=\"0\"\r\n                max=\"9\"\r\n                maxLength=\"1\"\r\n                data-password-index=\"0\"\r\n                value={password[0]}\r\n                onChange={onPasswordChange}\r\n                required\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                isCenter={true}\r\n                aria-label=\"두번째 비밀번호\"\r\n                min=\"0\"\r\n                max=\"9\"\r\n                maxLength=\"1\"\r\n                data-password-index=\"1\"\r\n                value={password[1]}\r\n                onChange={onPasswordChange}\r\n                required\r\n              />\r\n              <div className=\"card-addition__dot-wrapper\">\r\n                <span className=\"card-addition__dot\"></span>\r\n              </div>\r\n              <div className=\"card-addition__dot-wrapper\">\r\n                <span className=\"card-addition__dot\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {Object.values(inputVerification).every(\r\n            (isFulfilled) => isFulfilled\r\n          ) && (\r\n            <div className=\"card-addition__form-submit\">\r\n              <Button innerText=\"다음\" />\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n      {isModalOpen && (\r\n        <Modal onClick={onModalClick}>\r\n          <form className=\"card-type-radio-box\">\r\n            {Object.values(CARD)\r\n              .filter((value) => value.name !== \"\")\r\n              .map((value) => (\r\n                <CardTypeRadio\r\n                  key={value.name + value.color}\r\n                  cardType={value}\r\n                  groupName=\"card-type\"\r\n                  isChecked={value.name === cardType.name}\r\n                  onChange={onRadioChange}\r\n                />\r\n              ))}\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCardAddition.propTypes = {\r\n  onCardInfoSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardAddition;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../stories/Card\";\r\nimport Button from \"../stories/Button\";\r\nimport { CARD_SIZE } from \"../stories/constants/card\";\r\nimport { CARD_DESCRIPTION, FORMAT_CHAR } from \"../constants\";\r\n\r\nfunction CompleteCardAddition(props) {\r\n  const { cardType, cardNumbers, expirationDate, username } = props.card;\r\n  const [cardDescription, setCardDescription] = useState(\"\");\r\n\r\n  const onCardDescriptionChange = ({ target }) => {\r\n    setCardDescription(target.value);\r\n  };\r\n\r\n  const onDescriptionSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const card = {\r\n      cardDescription,\r\n      ...props.card,\r\n    };\r\n\r\n    props.onCardAdditionComplete(card);\r\n  };\r\n\r\n  return (\r\n    <div className=\"complete-card-addition\">\r\n      <h2>카드등록이 완료되었습니다.</h2>\r\n      <Card\r\n        cardType={cardType}\r\n        cardNumbers={cardNumbers}\r\n        username={username}\r\n        expirationDate={Object.values(expirationDate).join(\r\n          FORMAT_CHAR.EXPIRATION_DATE_SEPARATOR\r\n        )}\r\n        size={CARD_SIZE.LARGE}\r\n      />\r\n      <form onSubmit={onDescriptionSubmit}>\r\n        <input\r\n          value={cardDescription}\r\n          onChange={onCardDescriptionChange}\r\n          type=\"text\"\r\n          minLength={CARD_DESCRIPTION.MIN_LENGTH}\r\n          maxLength={CARD_DESCRIPTION.MAX_LENGTH}\r\n          placeholder=\"카드 별명을 입력해주세요\"\r\n          required\r\n        />\r\n        <Button innerText=\"확인\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompleteCardAddition.propTypes = {\r\n  onCardAdditionComplete: PropTypes.func.isRequired,\r\n  card: PropTypes.shape({\r\n    cardType: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      color: PropTypes.string.isRequired,\r\n    }),\r\n    cardNumbers: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    expirationDate: PropTypes.shape({\r\n      month: PropTypes.string.isRequired,\r\n      year: PropTypes.string.isRequired,\r\n    }),\r\n    username: PropTypes.string.isRequired,\r\n    secureCode: PropTypes.string.isRequired,\r\n    password: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default CompleteCardAddition;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PAGE } from \"../constants\";\r\n\r\nfunction Home(props) {\r\n  const { routeTo, cardList } = props;\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>준비중입니다. - home</p>\r\n        <button onClick={routeTo[PAGE.CARD_ADDITION.ID]}>\r\n          카드 추가 하러 가기\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {cardList.map(({ cardDescription, cardNumbers }) => (\r\n          <li key={cardNumbers.join(\"\")}>{cardDescription}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  routeTo: PropTypes.objectOf(PropTypes.func).isRequired,\r\n  cardList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      cardType: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        color: PropTypes.string.isRequired,\r\n      }),\r\n      cardNumbers: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      expirationDate: PropTypes.shape({\r\n        month: PropTypes.string.isRequired,\r\n        year: PropTypes.string.isRequired,\r\n      }),\r\n      username: PropTypes.string.isRequired,\r\n      secureCode: PropTypes.string.isRequired,\r\n      password: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    }).isRequired\r\n  ),\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { PAGE } from \"../constants\";\r\nimport Header from \"../stories/Header\";\r\nimport CardAddition from \"./CardAddition\";\r\nimport CompleteCardAddition from \"./CompleteCardAddition\";\r\nimport Home from \"./Home\";\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState({\r\n    id: PAGE.HOME.ID,\r\n    headerText: PAGE.HOME.HEADER_TEXT,\r\n    onPageBack: null,\r\n  });\r\n  const [cardList, setCardList] = useState([]);\r\n  const [processingCard, setProcessingCard] = useState({});\r\n\r\n  const routeTo = {\r\n    [PAGE.HOME.ID]: () =>\r\n      setPage({\r\n        id: PAGE.HOME.ID,\r\n        headerText: PAGE.HOME.HEADER_TEXT,\r\n        onPageBack: null,\r\n      }),\r\n    [PAGE.CARD_ADDITION.ID]: () =>\r\n      setPage({\r\n        id: PAGE.CARD_ADDITION.ID,\r\n        headerText: PAGE.CARD_ADDITION.HEADER_TEXT,\r\n        onPageBack: routeTo[PAGE.HOME.ID],\r\n      }),\r\n    [PAGE.COMPLETE_CARD_ADDITION.ID]: () =>\r\n      setPage({\r\n        id: PAGE.COMPLETE_CARD_ADDITION.ID,\r\n        headerText: PAGE.COMPLETE_CARD_ADDITION.HEADER_TEXT,\r\n        onPageBack: null,\r\n      }),\r\n  };\r\n\r\n  const onCardInfoSubmit = (card) => {\r\n    setProcessingCard(card);\r\n    routeTo[PAGE.COMPLETE_CARD_ADDITION.ID]();\r\n  };\r\n\r\n  const onCardAdditionComplete = (card) => {\r\n    setCardList((prevCardList) => [...prevCardList, card]);\r\n    routeTo[PAGE.HOME.ID]();\r\n  };\r\n\r\n  const mainComponent = {\r\n    [PAGE.HOME.ID]: <Home cardList={cardList} routeTo={routeTo} />,\r\n    [PAGE.CARD_ADDITION.ID]: (\r\n      <CardAddition onCardInfoSubmit={onCardInfoSubmit} />\r\n    ),\r\n    [PAGE.COMPLETE_CARD_ADDITION.ID]: (\r\n      <CompleteCardAddition\r\n        onCardAdditionComplete={onCardAdditionComplete}\r\n        card={processingCard}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header title={page.headerText} onPageBack={page.onPageBack} />\r\n      <main>{mainComponent[page.id]}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"./style/index.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}